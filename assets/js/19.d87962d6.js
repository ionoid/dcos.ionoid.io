(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{365:function(e,t,a){"use strict";a.r(t);var s=a(45),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Before exporting Docker images, make sure to have all the required tools\ninstalled:")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("Run the following commands with "),a("code",[e._v("sudo")]),e._v(" whenever it is necessary.")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Install Docker and buildx for multi-architectures using the following\ntutorial: "),a("a",{attrs:{href:"https://www.docker.com/blog/getting-started-with-docker-for-arm-on-linux/",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker and buildx for multi-architecture images"),a("OutboundLink")],1),e._v(",\nthen register "),a("code",[e._v("Arm")]),e._v(" executables or other architectures to run on x64 machines.")])]),e._v(" "),a("li",[a("p",[e._v("Enable Docker experimental features by editing (create it if not present) the\nfile "),a("code",[e._v("/etc/docker/daemon.json")]),e._v(" with your favorite text editor (here we use\n"),a("code",[e._v("nano")]),e._v("):")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("nano")]),e._v(" /etc/docker/daemon.json\n")])])]),a("p",[e._v("Then add the experimental feature there:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"experimental"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Save the file and restart Docker:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl restart docker\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Install "),a("a",{attrs:{href:"https://github.com/larsks/undocker",target:"_blank",rel:"noopener noreferrer"}},[e._v("undocker"),a("OutboundLink")],1),e._v(" which allows to extract\nDocker image layers to a directory:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("pip3 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" undocker\n")])])]),a("p",[e._v("Use "),a("code",[e._v("sudo")]),e._v(" if required.")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);