(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{369:function(e,t,s){"use strict";s.r(t);var a=s(45),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"flash-os-image-to-storage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flash-os-image-to-storage"}},[e._v("#")]),e._v(" Flash OS Image to Storage")]),e._v(" "),s("p",[e._v("To flash an OS image to the storage of your device you have two options:")]),e._v(" "),s("ul",[s("li",[e._v("Beginner users: "),s("a",{attrs:{href:"#beginner-users-using-the-etcher-tool-windows-linux-macos"}},[e._v("Use the Etcher tool")])]),e._v(" "),s("li",[e._v("Experienced users: "),s("a",{attrs:{href:"#experienced-users-use-the-dd-tool-on-linux"}},[e._v("Use the "),s("code",[e._v("dd")]),e._v(" tool")])])]),e._v(" "),s("h2",{attrs:{id:"beginner-users-using-the-etcher-tool-windows-linux-macos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beginner-users-using-the-etcher-tool-windows-linux-macos"}},[e._v("#")]),e._v(" Beginner users: Using the "),s("a",{attrs:{href:"https://etcher.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Etcher Tool"),s("OutboundLink")],1),e._v(" (Windows / Linux / MacOS)")]),e._v(" "),s("p",[e._v("First, make sure to install the "),s("a",{attrs:{href:"https://etcher.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Etcher tool"),s("OutboundLink")],1),e._v(". Then, choose\nthe section that corresponds to your device in the following list:")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#flash-raspberry-pi"}},[e._v("Flash Raspberry Pi")])]),e._v(" "),s("li",[e._v("More soon")])]),e._v(" "),s("h3",{attrs:{id:"flash-raspberry-pi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flash-raspberry-pi"}},[e._v("#")]),e._v(" Flash Raspberry Pi")]),e._v(" "),s("p",[e._v("Raspberry Pi boots from a microSD card (see\n"),s("a",{attrs:{href:"https://www.raspberrypi.org/documentation/installation/sd-cards.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Raspberry Pi SD Cards"),s("OutboundLink")],1),e._v("\n), so you will need to flash the OS image onto a microSD card to make it work.\nFor that, follow the following instructions:")]),e._v(" "),s("ul",[s("li",[e._v("Connect a microSD card inside the card reader that is connected to your PC\n(where Etcher is installed)")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/steps/flash-os-image/microsd-card-reader.jpg",alt:"Connect microSD to Slot"}})]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Make sure you have "),s("RouterLink",{attrs:{to:"/docs/register-devices.html"}},[e._v("generated an OS image for your\ndevice")])],1)]),e._v(" "),s("li",[s("p",[e._v("Open the Etcher tool")])])]),e._v(" "),s("p",[s("img",{attrs:{src:"/steps/flash-os-image/etcher.png",alt:"Etcher Tool"}})]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Click on "),s("em",[e._v("Select image")]),e._v(", then browse to the generated OS Image")])]),e._v(" "),s("li",[s("p",[e._v("Click on "),s("em",[e._v("Select drive")]),e._v(" and select the microSD card that you want to install\nthe OS image in")])]),e._v(" "),s("li",[s("p",[e._v("Click on "),s("em",[e._v("Flash")]),e._v(" and wait until the flash process ends")])]),e._v(" "),s("li",[s("p",[e._v("Once the flash process ended, eject your microSD card")])]),e._v(" "),s("li",[s("p",[e._v("Insert the microSD card into the microSD card slot on the underside of your\nRaspberry Pi device")])])]),e._v(" "),s("p",[s("img",{attrs:{src:"/steps/flash-os-image/raspberry-pi-microsd-slot.png",alt:"Insert microSD card"}})]),e._v(" "),s("ul",[s("li",[s("p",[e._v("On the "),s("a",{attrs:{href:e.$frontmatter.dashboardUrl,target:"_blank"}},[e._v("Ionoid.io dashboard")]),e._v(",\ngo to "),s("the-project-details-page"),e._v(" that you used to generate the OS image")],1)]),e._v(" "),s("li",[s("p",[e._v("Power your Raspberry Pi device and see it appear on "),s("the-project-details-page"),e._v("\nof the Ionoid.io dashboard (process can take from few seconds to few\nminutes, depending on the internet connection)")],1)])]),e._v(" "),s("p",[s("img",{attrs:{src:"/steps/projects-and-devices/boot_device.gif",alt:"Boot the Device"}})]),e._v(" "),s("ul",[s("li",[e._v("Congratulations! your device is now registered on Ionoid.io and ready to be\nmanaged from the dashboard.")])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("It may happen that the device tooks a long time to show up in the dashboard,\nthis is due to the "),s("em",[e._v("auto resizing storage")]),e._v(" process. If you see that it took too\nmuch time to show up, just unplug then replug the power supply to reboot the\ndevice.")])]),e._v(" "),s("h2",{attrs:{id:"experienced-users-use-the-dd-tool-on-linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#experienced-users-use-the-dd-tool-on-linux"}},[e._v("#")]),e._v(" Experienced users: Use the "),s("code",[e._v("dd")]),e._v(" tool on Linux")]),e._v(" "),s("p",[e._v("We are going to use the "),s("code",[e._v("dd")]),e._v(" tool to copy the OS image into the microSD card.")]),e._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("Please be careful when choosing the device that you will write to using the "),s("code",[e._v("dd")]),e._v("\ntool.")])]),e._v(" "),s("h3",{attrs:{id:"discover-the-device-storage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#discover-the-device-storage"}},[e._v("#")]),e._v(" Discover the device storage")]),e._v(" "),s("ul",[s("li",[e._v("Connect a microSD card inside the card reader that is connected to your PC\n(where Linux is installed)")])]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("Usually the microSD card will be auto-mounted as soon as you connect it to your\nPC. If that is the case, make sure to "),s("em",[e._v("unmount")]),e._v(" it before proceeding furthur,\notherwise the flash process will fail!")])]),e._v(" "),s("ul",[s("li",[e._v("Find out how Linux is seeing the card, for that, you can use for example the\n"),s("code",[e._v("dmesg")]),e._v(" tool. Run the following command (as superuser) immediately after\ninserted the microSD card:")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dmesg")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("tail")]),e._v(" -30\n")])])]),s("ul",[s("li",[e._v("Find out how Linux is seeing the inserted card by looking at something like\n"),s("code",[e._v("sdx")]),e._v(". For example, in the following "),s("code",[e._v("dmesg")]),e._v(" output, the name that has been\naffected to the microSD card by Linux is "),s("code",[e._v("sdc")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[e._v(" ")]),s("div",{staticClass:"highlighted"},[e._v(" ")]),s("div",{staticClass:"highlighted"},[e._v(" ")]),s("div",{staticClass:"highlighted"},[e._v(" ")]),s("div",{staticClass:"highlighted"},[e._v(" ")]),s("div",{staticClass:"highlighted"},[e._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("[138644.433472] usb 3-2: new high-speed USB device number 2 using xhci_hcd\n[138644.588120] usb 3-2: New USB device found, idVendor=XXXX, idProduct=XXXX\n[138644.588128] usb 3-2: New USB device strings: Mfr=1, Product=2, SerialNumber=3\n[138644.588132] usb 3-2: Product: Ultra\n[138644.588136] usb 3-2: Manufacturer: SanDisk\n[138644.588139] usb 3-2: SerialNumber: XXXXXXXXXXXXXXXXXXXX\n[138644.589696] usb-storage 3-2:1.0: USB Mass Storage device detected\n[138644.591798] scsi host7: usb-storage 3-2:1.0\n[138645.603456] scsi 7:0:0:0: Direct-Access     XXXXXX  XXXX            1.00 PQ: 0 ANSI: 6\n[138645.604595] sd 7:0:0:0: Attached scsi generic sg3 type 0\n[138645.604812] sd 7:0:0:0: [sdc] 60062500 512-byte logical blocks: (30.8 GB/28.6 GiB)\n[138645.606477] sd 7:0:0:0: [sdc] Write Protect is off\n[138645.606482] sd 7:0:0:0: [sdc] Mode Sense: 43 00 00 00\n[138645.607062] sd 7:0:0:0: [sdc] Write cache: disabled, read cache: enabled, doesn't support DPO or FUA\n[138645.616198]  sdc: sdc1 sdc2\n[138645.618650] sd 7:0:0:0: [sdc] Attached SCSI removable disk\n\n")])])]),s("ul",[s("li",[e._v("The path of the microSD card on the filesystem is then "),s("code",[e._v("/dev/sdc")])])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("If you didn't yet unmount the mounted microSD card, you can use these\ninformations to unmount it using the tool "),s("code",[e._v("umount")]),e._v(". In the previous example,\nthere are two mounted partitions you need to unmount:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("umount")]),e._v(" /dev/sdc1\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("umount")]),e._v(" /dev/sdc2\n")])])])]),e._v(" "),s("ul",[s("li",[e._v("Run the following command to write the OS image into the microSD card (we\nsuppose that the OS image has filename "),s("code",[e._v("OS-image.img")]),e._v(" and that the microSD\ncard is at "),s("code",[e._v("/dev/sdc")]),e._v("):")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dd")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("bs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("4M "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("OS-image.img "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("of")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/dev/sdc "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("status")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("progress "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("conv")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("fsync\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("INFORMATION")]),e._v(" "),s("p",[e._v("Here is what the previous command options mean:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("if=input        file which is OS image (unzipped image, .img format)\nof=output       file which is the connected device storage\nbs=4M           read and write up to BYTES bytes at a time\n")])])])]),e._v(" "),s("ul",[s("li",[e._v("Make sure that write cache is flushed with:")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sync")]),e._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("If your OS image is inside a zip file, use the following command that will\nfirst unzip the image (you must have the "),s("code",[e._v("unzip")]),e._v(" tool installed):")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("unzip")]),e._v(" -p "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  sealos-image-minimal-raspberrypi3-20200201073416.rootfs.rpi-sdimg.img-ionoid.zip "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dd")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("of")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/dev/sdX "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("bs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("4M "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("status")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("progress "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("conv")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("fsync\n")])])])]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Once the flash process ended, eject your microSD card")])]),e._v(" "),s("li",[s("p",[e._v("Insert the microSD card into the microSD card slot on the underside of your\nRaspberry Pi device")])]),e._v(" "),s("li",[s("p",[e._v("On the "),s("a",{attrs:{href:e.$frontmatter.dashboardUrl,target:"_blank"}},[e._v("Ionoid.io dashboard")]),e._v(",\ngo to "),s("the-project-details-page"),e._v(" that you used to generate the OS image")],1)]),e._v(" "),s("li",[s("p",[e._v("Power your Raspberry Pi device and see it appear on "),s("the-project-details-page"),e._v("\nof the Ionoid.io dashboard (process can take from few seconds to few\nminutes, depending on the internet connection)")],1)])]),e._v(" "),s("p",[s("img",{attrs:{src:"/steps/projects-and-devices/boot_device.gif",alt:"Boot the Device"}})]),e._v(" "),s("ul",[s("li",[e._v("Congratulations! your device is now registered on Ionoid.io and ready to be\nmanaged from the dashboard.")])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("It may happen that the device tooks a long time to show up in the dashboard,\nthis is due to the "),s("em",[e._v("auto resizing storage")]),e._v(" process. If you see that it took too\nmuch time to show up, just unplug then replug the power supply to reboot the\ndevice.")])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("It may happen that you need to copy back the image from the microSD card into\nthe computer for debugging purposes, fot that just run the inverse of the\nprevious "),s("code",[e._v("dd")]),e._v(" command (replace the "),s("code",[e._v("$COUNT")]),e._v(" value of count option with the\nnumber of blocks that was displayed by "),s("code",[e._v("dd")]),e._v(" when you first copied the OS image\nonto the microSD card):")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dd")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("bs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("4M "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/dev/sdc "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("of")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("dirty-image.img "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$COUNT")]),e._v("\n")])])])]),e._v(" "),s("Content",{attrs:{"page-key":e.getPageKey(e.$site.pages,"/docs/_have-questions.html")}})],1)}),[],!1,null,null,null);t.default=o.exports}}]);